# Date: March 11 2021
# Euler 1: Multiples of 3 and 5
# Problem: If we list all the natural numbers below 10 that are
# multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.

'''
sum1 = 0
sum2 = 0
for num in range(3,1000):
    if num % 3 == 0:
        sum1 += num
    if num % 5 == 0 and num % 3 != 0:
        sum2 += num

total = sum1 + sum2

print(total)
'''


# Date: March 11 2021
# Euler 2: Even Fibonacci numbers
# Problem: Each new term in the Fibonacci sequence is generated by adding
# the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

'''
fib = 1
i = 0
temp = [0]
sum = 0
while fib < 4000000:
    temp.append(fib)
    fib = temp[i] + fib
    i += 1
    if fib % 2 == 0:
        sum += fib

print(sum)
'''

# Date: March 12 2021
# Euler 3: Largest prime factor
# Problem: The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143 ?
num = 600851475143
arr_fac = []
i = 0
count = 2
while num > 1:
    if num % count == 0:
        arr_fac.append(count)
        num = num // count
        i += 1
    count += 1

print(arr_fac[len(arr_fac)-1])
